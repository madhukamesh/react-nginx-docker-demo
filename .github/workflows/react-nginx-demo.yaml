# docker-build.yml in .github/workflows/
name: Build and Push Docker Image to GHCR

# Workflow will run when a push to main branch occurs
on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  COMPANY_NAME: ONEYES
  COUNTRY_NAME: SWEDEN

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout/download the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: print variables
        run: |
            echo ${{ github.repository }}
            echo ${{ github.actor }}
            echo ${{ github.sha }}
            echo ${{ github.ref }}
            echo ${{ github.event_name }}
            echo ${{ github.event }}
            echo ${{ secrets.NAME }}
            echo ${{ vars.GENDER }}
            echo ${{ env.COMPANY_NAME }}
            echo ${{ env.COUNTRY_NAME }}

      # Step 3: Logs in to GHCR to upload file
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest Tag
        id: get_latest_tag
        shell: bash
        run: |
          latest_version=$(git describe --tags --abbrev=0)
          if [ -z "$latest_version" ]; then
            echo "No tags found"
            latest_version="v1"
            echo "latest_tag=$latest_version" >> $GITHUB_OUTPUT
          else
            echo "Latest tag is $latest_version" # v1
            version_number=$(echo "$latest_version" | awk -F'v' '{print $2}') #1
            new_version=v$(( version_number + 1 )) # v2
            echo "latest_tag=$new_version" >> $GITHUB_OUTPUT
          fi

      # Step 4: Creates tags for docker image
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            ${{ github.sha }}
            ${{ steps.get_latest_tag.outputs.latest_tag }}
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest

      # Step 5: Build and push Docker image to GHCR
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Push latest tag
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@bot.com"
          git tag "${{ steps.get_latest_tag.outputs.latest_tag }}"
          git push origin "${{ steps.get_latest_tag.outputs.latest_tag }}"
